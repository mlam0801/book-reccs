package bookstuff;

import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.Test;

public class RecommenderTest {

	@Test
	public void simScoreTest() {
		int[][] B = new int[30][20];
		int[] A = {-1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3}; // = 18
		B[0] = new int[]{-1, 2, 3, 5, -1, 5, 3, 3, 1, 4, 2, 2, 5, -1, 1, 3, 3, 5, 4, 3};	// = 200
		//both = 6 + 9 = 15    15/(200*18)
		int index = 0;
		double score = Recommender.simScore(A, B, index);
		double expResult = 0.00416667;
		assertEquals(expResult, score, 0.001);
	}
	
	@Test
	public void simScoreListTest() {
		int[] A = {-1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3}; // = 18
		int[][]B = {
				{-1, 2, 3, 5, -1, 5, 3, 3, 1, 4, 2, 2, 5, -1, 1, 3, 3, 5, 4, 3}, // = 200
				{-1, 1, 1, 4, 1, 3, 3, 1, 2, 3, 4, -1, 4, 1, 2, 4, 5, 4, 2, 3}, // = 158
				{3, -1, 2, 3, -1, 2, 5, -1, 3, 3, 5, 2, 2, 1, 2, 3, 5, 3, 4, 2}, // = 170
				{-1, 1, -1, 4, 1, 3, 5, 2, 1, 5, 3, -1, 5, 2, 1, 3, 4, 5, 3, 2}, // = 184
				{-1, -1, 3, 2, -1, 5, 5, 2, 2, 4, 4, 2, 3, 2, -1, 3, 4, 4, 3, 1}, // = 171
				{2, 1, 1, 5, 2, 2, 4, 2, 3, 4, 3, -1, 5, 2, 2, 5, 3, 5, 2, 1}, // = 190
				{3, -1, 3, 4, -1, 2, 5, -1, -1, 4, 3, -1, 3, -1, 2, 5, 5, 5, 4, 2}, // = 196
				{4, -1, 4, 2, 3, -1, 1, 3, 4, -1, 1, 4, 4, 4, -1, 2, -1, 1, 4, 4}, // = 157
				{4, 3, 3, 3, -1, 2, 2, 4, 3, -1, 2, 4, 3, 4, 2, -1, -1, 2, 2, 3}, // = 142
				{3, -1, 3, -1, 3, 4, -1, 5, 5, -1, -1, -1, 1, -1, -1, 1, 1, 2, -1, 5}, // 125
				{3, -1, 3, 4, 3, 4, -1, 5, 5, 2, 3, 3, 4, 1, 1, -1, -1, -1, -1, 4}, // 165
				{4, -1, 4, 4, 1, 3, -1, 5, 4, -1, 1, 3, 4, 1, -1, 1, -1, 1, -1, 5}, // 153
				{5, -1, 3, 1, 4, 3, -1, 5, 4, 1, 3, 2, 1, -1, 4, 2, 1, -1, 2, 4}, // 157
				{3, -1, 5, 1, 4, 4, 2, 5, 5, 1, 2, 3, 1, 1, -1, 1, -1, 1, -1, 5}, // 164
				{4, 1, 5, 4, 3, -1, 1, 3, 4, -1, -1, 3, 3, -1, 1, 1, 2, -1, 3, 5}, // 151
				{-1, 1, 1, 3, -1, 3, 1, 3, -1, -1, 3, -1, 5, 2, 2, 1, 4, -1, 5, -1}, // 114
				{3, -1, 2, 3, 1, 5, 4, 3, 3, -1, 5, -1, 5, 2, -1, 4, 4, 3, 3, 3}, // 195
				{1, 1, 1, 3, 2, 4, 1, -1, -1, -1, 5, -1, 3, -1, -1, 1, -1, 2, 5, 2}, // 101
				{-1, 2, 3, 5, -1, 4, 3, 1, 1, 3, 3, -1, 4, -1, -1, 4, 3, 2, 5, 1}, // 154
				{-1, 1, 3, 3, -1, 3, 3, 1, -1, -1, 3, -1, 5, -1, -1, 3, 1, 2, 4, -1}, // 102
				{3, -1, 2, 4, 1, 4, 3, -1, 2, 3, 4, 1, 3, -1, 2, -1, 4, 3, 5, -1}, // 148
				{-1, 1, 3, 5, -1, 4, 2, 1, -1, 3, 3, 2, 3, 2, -1, 3, 1, -1, 3, -1}, // 110
				{3, 2, 2, 3, -1, 5, -1, -1, 2, 3, 4, -1, 4, 1, -1, -1, -1, -1, 4, 2}, // 117
				{-1, 3, -1, -1, 4, -1, 2, -1, 2, 2, 2, 5, -1, 3, 4, -1, -1, 2, -1, 2},// 99
				{1, 4, 3, -1, 3, 2, 1, -1, -1, -1, 1, 3, 1, 3, 3, 1, -1, -1, -1, 3}, // 79
				{4, 3, 3, -1, 4, 2, -1, 4, -1, -1, 2, 4, -1, 3, 4, 2, -1, -1, -1, 4}, // 135
				{-1, 5, 1, -1, 4, 1, -1, 3, 2, 2, -1, 4, 1, 3, 3, 1, -1, -1, -1, 3}, // 105
				{-1, 4, 2, 1, 5, -1, -1, 2, 1, 1, -1, 5, -1, 5, 4, 1, 2, 2, -1, 1}, // 128
				{2, 5, 2, -1, 3, -1, -1, 1, -1, 2, -1, 4, 2, 4, 3, -1, 2, 1, -1, -1}, // 97
				{2, 5, 1, 1, 4, -1, 2, 1, -1, -1, 2, 4, -1, 3, 4, 2, -1, -1, -1, 4} // = 117
		};
		double[] result = Recommender.simScoreList(A, B);
		double[] expResult = { 15/(200*18), 12/(158*18), 6/(170*18), 9/(184*18), 3/(171*18), 6/(190*18), 6/(196*18), 12/(157*18), 18/(142*18), 15/(125*18), 12/(165*18), 15/(153*18),
				12/(157*18), 15/(164*18), 18/(151*18), 3/(114*18), 9/(195*18), 9/(101*18), 9/(154*18), 3/(102*18), 0/(148*18), 3/(110*18), 12/(117*18), 15/(99*18), 21/(79*18), 21/(135*18), 24/(105*18), 15/(128*18), 
				15/(97*18), 27/(117*18)}; 
		assertArrayEquals(expResult, result, 0.1);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}